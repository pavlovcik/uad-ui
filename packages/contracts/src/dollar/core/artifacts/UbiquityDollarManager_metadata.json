{
  "compiler": {
    "version": "0.8.7+commit.e28d00a7"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_admin",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "previousAdminRole",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "newAdminRole",
            "type": "bytes32"
          }
        ],
        "name": "RoleAdminChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "name": "RoleGranted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "name": "RoleRevoked",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "CREDIT_NFT_MANAGER_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "DEFAULT_ADMIN_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "GOVERNANCE_TOKEN_BURNER_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "GOVERNANCE_TOKEN_MANAGER_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "GOVERNANCE_TOKEN_MINTER_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "INCENTIVE_MANAGER_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "PAUSER_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "STAKING_MANAGER_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "creditCalculatorAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "creditNFTAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "creditNFTCalculatorAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "creditTokenAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "curve3PoolTokenAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_curveFactory",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_crvBasePool",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_crv3PoolTokenAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_amplificationCoefficient",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_fee",
            "type": "uint256"
          }
        ],
        "name": "deployStableSwapPool",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "dollarMintCalculatorAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "dollarTokenAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "formulasAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_creditNFTManagerAddress",
            "type": "address"
          }
        ],
        "name": "getExcessDollarsDistributor",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          }
        ],
        "name": "getRoleAdmin",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "governanceTokenAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "grantRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "hasRole",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "masterChefAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "renounceRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "revokeRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_creditCalculatorAddress",
            "type": "address"
          }
        ],
        "name": "setCreditCalculatorAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_creditNFTAddress",
            "type": "address"
          }
        ],
        "name": "setCreditNFTAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_creditNFTCalculatorAddress",
            "type": "address"
          }
        ],
        "name": "setCreditNFTCalculatorAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_creditTokenAddress",
            "type": "address"
          }
        ],
        "name": "setCreditTokenAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_dollarMintCalculatorAddress",
            "type": "address"
          }
        ],
        "name": "setDollarMintCalculatorAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_dollarTokenAddress",
            "type": "address"
          }
        ],
        "name": "setDollarTokenAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "creditNFTManagerAddress",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "dollarMintExcess",
            "type": "address"
          }
        ],
        "name": "setExcessDollarsDistributor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_formulasAddress",
            "type": "address"
          }
        ],
        "name": "setFormulasAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_governanceTokenAddress",
            "type": "address"
          }
        ],
        "name": "setGovernanceTokenAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_incentiveAddress",
            "type": "address"
          }
        ],
        "name": "setIncentiveToDollar",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_masterChefAddress",
            "type": "address"
          }
        ],
        "name": "setMasterChefAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_stableSwapMetaPoolAddress",
            "type": "address"
          }
        ],
        "name": "setStableSwapMetaPoolAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_stakingContractAddress",
            "type": "address"
          }
        ],
        "name": "setStakingContractAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_stakingShareAddress",
            "type": "address"
          }
        ],
        "name": "setStakingShareAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_sushiSwapPoolAddress",
            "type": "address"
          }
        ],
        "name": "setSushiSwapPoolAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_treasuryAddress",
            "type": "address"
          }
        ],
        "name": "setTreasuryAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_twapOracleAddress",
            "type": "address"
          }
        ],
        "name": "setTwapOracleAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "stableSwapMetaPoolAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "stakingContractAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "stakingShareAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "sushiSwapPoolAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "treasuryAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "twapOracleAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "This should be used as a central access control manager which other contracts use to check permissions",
      "kind": "dev",
      "methods": {
        "deployStableSwapPool(address,address,address,uint256,uint256)": {
          "details": "From the curve documentation for uncollateralized algorithmic stablecoins amplification should be 5-10",
          "params": {
            "_amplificationCoefficient": "amplification coefficient. The smaller it is the closer to a constant product we are.",
            "_crv3PoolTokenAddress": "curve 3Pool token Address",
            "_crvBasePool": "Address of the base pool to use within the new metapool.",
            "_curveFactory": "MetaPool factory address",
            "_fee": "Trade fee, given as an integer with 1e10 precision."
          }
        },
        "getRoleAdmin(bytes32)": {
          "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
        },
        "grantRole(bytes32,address)": {
          "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
        },
        "hasRole(bytes32,address)": {
          "details": "Returns `true` if `account` has been granted `role`."
        },
        "renounceRole(bytes32,address)": {
          "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
        },
        "revokeRole(bytes32,address)": {
          "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
        },
        "setStakingContractAddress(address)": {
          "details": "staking contract participants deposit  curve LP token for a certain duration to earn Governance Tokens and more curve LP token",
          "params": {
            "_stakingContractAddress": "staking contract address"
          }
        },
        "setTreasuryAddress(address)": {
          "details": "the treasury fund is used to maintain the protocol",
          "params": {
            "_treasuryAddress": "treasury fund address"
          }
        },
        "supportsInterface(bytes4)": {
          "details": "See {IERC165-supportsInterface}."
        }
      },
      "title": "A central config for the Ubiquity Dollar system. Also acts as a central access control manager.",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "deployStableSwapPool(address,address,address,uint256,uint256)": {
          "notice": "deploy a new Curve metapools for Dollar Token Dollar/3Pool"
        },
        "setStakingContractAddress(address)": {
          "notice": "set the staking smart contract address"
        },
        "setTreasuryAddress(address)": {
          "notice": "set the treasury address"
        }
      },
      "notice": "For storing constants. For storing variables and allowing them to be changed by the admin (governance)",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "uri3/ubiquity-dollar/packages/contracts/src/dollar/core/UbiquityDollarManager.sol": "UbiquityDollarManager"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": []
  },
  "sources": {
    "@openzeppelin/contracts/access/AccessControl.sol": {
      "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
      "license": "MIT",
      "urls": ["bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe", "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"]
    },
    "@openzeppelin/contracts/access/IAccessControl.sol": {
      "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
      "license": "MIT",
      "urls": ["bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a", "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"]
    },
    "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
      "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
      "license": "MIT",
      "urls": ["bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d", "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"]
    },
    "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
      "license": "MIT",
      "urls": ["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34", "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"]
    },
    "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
      "license": "MIT",
      "urls": ["bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd", "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"]
    },
    "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
      "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
      "license": "MIT",
      "urls": ["bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95", "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"]
    },
    "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
      "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
      "license": "MIT",
      "urls": ["bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6", "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"]
    },
    "@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
      "license": "MIT",
      "urls": ["bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269", "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"]
    },
    "@openzeppelin/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": ["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92", "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]
    },
    "@openzeppelin/contracts/utils/Strings.sol": {
      "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
      "license": "MIT",
      "urls": ["bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634", "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"]
    },
    "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
      "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
      "license": "MIT",
      "urls": ["bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d", "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"]
    },
    "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": ["bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f", "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"]
    },
    "@openzeppelin/contracts/utils/math/Math.sol": {
      "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
      "license": "MIT",
      "urls": ["bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b", "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"]
    },
    "uri3/ubiquity-dollar/packages/contracts/src/dollar/core/TWAPOracleDollar3pool.sol": {
      "keccak256": "0xa27d8479259974a96a0d3ec163afb54410fe02a5d655cc2340187df2178eb73a",
      "license": "Apache-2.0",
      "urls": ["bzz-raw://a82b2579042046b462813e24d263647fde8aa3932e36159c85cc58298f4afd82", "dweb:/ipfs/QmZfF6R9zgchD6arTQQxJ5JBSsdDYpfhhJNcYBsKhUW2DZ"]
    },
    "uri3/ubiquity-dollar/packages/contracts/src/dollar/core/UbiquityDollarManager.sol": {
      "keccak256": "0x8cf2597fb45abea494dd53057ef1329741861f71c896066e429f80391848e027",
      "license": "MIT",
      "urls": ["bzz-raw://a05b7e1bfbb551ba3e747ff53b24d585336be05672c92eea0338af0f2c7e1683", "dweb:/ipfs/QmPrmyEwwDXV5HsEnbqMJpVmB56UqZLqKd9eWVpssnu83E"]
    },
    "uri3/ubiquity-dollar/packages/contracts/src/dollar/interfaces/ICurveFactory.sol": {
      "keccak256": "0x13e3ebe30aef8089578f12989e4cc2dcee454f7b1766727ffc60972fe356385b",
      "license": "MIT",
      "urls": ["bzz-raw://812a3546afed9edafbadd250bec11afea3703e122a161acc93f429e43d8ae068", "dweb:/ipfs/QmeDGqHvH5Pb6viPGGbJ7HVepcLFmsgG6UMbehebpfC7JK"]
    },
    "uri3/ubiquity-dollar/packages/contracts/src/dollar/interfaces/IERC20Ubiquity.sol": {
      "keccak256": "0xfd6e4731fd89698cc0f71c481de3659276ddd5f836f06da21e8cab0ec5b141d4",
      "license": "Apache-2.0",
      "urls": ["bzz-raw://48511709c52a674c26d781273db43452334d7b52b9105af6c58e112a3bc4e751", "dweb:/ipfs/QmcGyjiKih3mds9C2sgrTwbfo6HZXKfZmAQJvFB249TQkQ"]
    },
    "uri3/ubiquity-dollar/packages/contracts/src/dollar/interfaces/IMetaPool.sol": {
      "keccak256": "0xd8a1a03becb08df936f0f99d6a7edde67f5b9e2050e6c365bd763782cb875d9b",
      "license": "UNLICENSED",
      "urls": ["bzz-raw://8bf0954b15db88ba685e7098110960e38bc4353ce07c54a65b54f0f02e075590", "dweb:/ipfs/QmVFN5cVdZuVEdL7Uqd4GnWtysxALrVUtawiT4SQci8mjJ"]
    },
    "uri3/ubiquity-dollar/packages/contracts/src/dollar/interfaces/IUbiquityDollarToken.sol": {
      "keccak256": "0x033d7f395e38a9ee3121aa0cf75dae1cd853717ef116ed21c127c19e60da1782",
      "license": "Apache-2.0",
      "urls": ["bzz-raw://b573500926ec041d425037fa204a6723acf977372247f6907537262eb9ad2226", "dweb:/ipfs/QmUAr9gHd3hQ3RtGZCAh6Zy8dVggt1QVgMZeLKCmqFMreP"]
    }
  },
  "version": 1
}
