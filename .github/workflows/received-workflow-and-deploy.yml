name: Receive Workflow and Deploy

on:
  workflow_run:
    workflows: ["Install and Build Workflow"]
    types:
      - completed

jobs:
  receive-pr-and-deploy:
    runs-on: ubuntu-22.04
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: "Download artifact"
        uses: actions/github-script@v6.3.3
        with:
          script: |
            const fs = require("fs");
            const download_artifact = require('${{ github.workspace }}/utils/download_artifact.js');
            const workflow_run_id = '${{ github.event.workflow_run.id }}';
            const workspace = '${{ github.workspace }}';
            download_artifact({github, context, fs, workflow_run_id, workspace})
      - name: Extract files
        run: unzip pr.zip && unzip pull-request.zip && ls

      - name: Deploy Development
        run: |
          netlify link --id ${{ secrets.NETLIFY_SITE_ID_DEVELOPMENT }}
          netlify deploy --dir=./dist --prod > ./deployments.log
      - name: GitHub App token
        uses: tibdex/github-app-token@v1.7.0
        id: get_installation_token
        with:
          app_id: ${{ secrets.UBIQUITY_BOUNTY_BOT_APP_ID }}
          private_key: ${{ secrets.UBIQUITY_BOUNTY_BOT_PRIVATE_KEY }}
      - name: Use token
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "The generated token is masked: ${TOKEN}"

      - name: Print Logs
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.get_installation_token.outputs.token }}
          script: |
            const fs = require("fs");
            const print_deployments_log = require('${{ github.workspace }}/utils/print_deployments_logs.js');
            await print_deployments_log({github, context, fs});
