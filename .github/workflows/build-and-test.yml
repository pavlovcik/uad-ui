name: Build & Test

on:
  push:
  pull_request:

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.14.1"

      - name: Install dependencies
        run: sudo apt -y update && sudo apt -y install libusb-1.0-0-dev libudev-dev

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly-87bc53fc6c874bd4c92d97ed180b949e3a36d78c

      - name: Yarn Install
        run: yarn install --mode=skip-build && yarn allow-scripts
        
      - name: Wrangler Install
        run: npm install -g wrangler        

      - name: Set Environment Variables
        env:
          INFURA_ID: ${{ secrets.INFURA_ID }}
          API_KEY_ALCHEMY: ${{ secrets.API_KEY_ALCHEMY }}
        run: |
          echo "INFURA_ID=$INFURA_ID" > ./packages/dapp/.env
          echo "API_KEY_ALCHEMY=$API_KEY_ALCHEMY" >> ./packages/dapp/.env

      - name: Setup Forge
        run: yarn workspace @ubiquity/contracts forge:install

      - name: Build All
        run: yarn build

      - name: Test All
        run: yarn test:all

      - name: Deploy to cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          PRODUCTION_BRANCH: "development"      
          OUTPUT_DIRECTORY: "./packages/dapp/dist"
        run: |
          IFS='/' read -ra fields <<< "$REPOSITORY"
          projectName="${fields[1]}"
          echo $projectName
          wrangler pages project list > project_list.txt
          if grep -q $projectName project_list.txt; then
            echo "Project found"
          else
            echo "Project not found"
            wrangler pages project create "$projectName" --production-branch "$PRODUCTION_BRANCH"
          fi
          wrangler pages publish "$OUTPUT_DIRECTORY" --project-name "$projectName"

      - name: Run Server
        run: yarn dev:dapp &
        env:
          CI: true
